1) Act y ant apuntan al mismo nodo
2) Mientras la lista no termine y no se haya encontrado el dato a eliminar,recorro la lista
3) Si encuentro el dato,entonces encontre = true,sino sigo recorriendo la lista
4) Sale de la lista cuando termina o cuando encontre = true,si encontre = true,verifico si es el 1er elemento,si lo es,L apunta al siguiente nodo de act,sino el siguiente de ant apunta al sig de act
5) Elimino act

*Lista en la que SI O SI se encuentra el elemento

Procedure eliminar (var pri:lista; num : integer; var pude: boolean);
var 
 ant, act: lista;
begin 
  pude := false;
  act := pri;
  while (act^.datos.nom <> nom) do begin   // NO HACE FALTA PREGUNTAR POR NIL {Recorro mientras no encuentre el elemento}
      ant := act;
      act := act^.sig
  end;   
  pude := true;  // SI SALE DEL WHILE ES PORQUE YA LO ENCONTRÃ“ SEGURO
  if (act = pri) then  
      pri := pri^.sig;
  else  
      ant^.sig:= act^.sig;
  dispose (act);
 end;
end;




*Lista en la que no sabemos si existe el elemento

Procedure eliminar (var l:lista; dato : integer; var pude: boolean);
var 
 ant, act: lista;
begin 
  pude := false;
  act := l;
  while  (act <> NIL) and (act^.datos.num <> dato) do begin {Recorro mientras no se termine la lista y no encuentre el elemento}
      ant := act;
      act := act^.sig
  end;   
  if (act <> NIL) then begin
       exito := true; 
    if (act = pri) then  
      pri := act^.sig;
    else  
      ant^.sig:= act^.sig;
    dispose (act);
  end;
end;
